{
  "type": "File",
  "errors": [],
  "program": {
    "type": "Program",
    "sourceType": "script",
    "interpreter": null,
    "body": [
      {
        "type": "ExpressionStatement",
        "expression": {
          "type": "FunctionExpression",
          "id": null,
          "generator": false,
          "async": false,
          "params": [
            {
              "type": "Identifier",
              "name": "a"
            }
          ],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "ReturnStatement",
                "argument": {
                  "type": "Identifier",
                  "name": "b"
                }
              }
            ],
            "directives": []
          },
          "extra": {
            "parenthesized": true
          }
        }
      },
      {
        "type": "ExpressionStatement",
        "expression": {
          "type": "ArrowFunctionExpression",
          "id": null,
          "generator": false,
          "async": false,
          "params": [
            {
              "type": "Identifier",
              "name": "a"
            }
          ],
          "body": {
            "type": "Identifier",
            "name": "b"
          }
        }
      },
      {
        "type": "ExpressionStatement",
        "expression": {
          "type": "ArrowFunctionExpression",
          "id": null,
          "generator": false,
          "async": false,
          "params": [
            {
              "type": "Identifier",
              "name": "a"
            }
          ],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "Identifier",
                  "name": "b"
                }
              },
              {
                "type": "ReturnStatement",
                "argument": {
                  "type": "Identifier",
                  "name": "c"
                }
              }
            ],
            "directives": []
          }
        }
      },
      {
        "type": "VariableDeclaration",
        "declarations": [
          {
            "type": "VariableDeclarator",
            "id": {
              "type": "Identifier",
              "name": "f"
            },
            "init": {
              "type": "FunctionExpression",
              "id": {
                "type": "Identifier",
                "name": "f"
              },
              "generator": false,
              "async": false,
              "params": [
                {
                  "type": "Identifier",
                  "name": "x"
                }
              ],
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ReturnStatement",
                    "argument": {
                      "type": "BinaryExpression",
                      "left": {
                        "type": "Identifier",
                        "name": "x"
                      },
                      "operator": "+",
                      "right": {
                        "type": "NumericLiteral",
                        "extra": {
                          "rawValue": 1,
                          "raw": "1"
                        },
                        "value": 1
                      }
                    }
                  }
                ],
                "directives": []
              }
            }
          }
        ],
        "kind": "var"
      },
      {
        "type": "ExpressionStatement",
        "expression": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "f"
          },
          "arguments": [
            {
              "type": "NumericLiteral",
              "extra": {
                "rawValue": 1,
                "raw": "1"
              },
              "value": 1
            }
          ]
        }
      },
      {
        "type": "ExpressionStatement",
        "expression": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "f"
          },
          "arguments": [
            {
              "type": "NumericLiteral",
              "extra": {
                "rawValue": 1,
                "raw": "1"
              },
              "value": 1
            }
          ]
        }
      },
      {
        "type": "ExpressionStatement",
        "expression": {
          "type": "CallExpression",
          "callee": {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "a"
            },
            "property": {
              "type": "NumericLiteral",
              "extra": {
                "rawValue": 2,
                "raw": "2"
              },
              "value": 2
            },
            "computed": true
          },
          "arguments": [
            {
              "type": "NumericLiteral",
              "extra": {
                "rawValue": 3,
                "raw": "3"
              },
              "value": 3
            }
          ]
        }
      },
      {
        "type": "ExpressionStatement",
        "expression": {
          "type": "FunctionExpression",
          "id": null,
          "generator": false,
          "async": false,
          "params": [
            {
              "type": "Identifier",
              "name": "a"
            },
            {
              "type": "RestElement",
              "argument": {
                "type": "Identifier",
                "name": "b"
              }
            }
          ],
          "body": {
            "type": "BlockStatement",
            "body": [],
            "directives": []
          },
          "extra": {
            "parenthesized": true
          }
        }
      },
      {
        "type": "ExpressionStatement",
        "expression": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "f"
          },
          "arguments": [
            {
              "type": "Identifier",
              "name": "a"
            },
            {
              "type": "SpreadElement",
              "argument": {
                "type": "Identifier",
                "name": "b"
              }
            }
          ]
        }
      }
    ],
    "directives": []
  }
}